// test/helpers/db-cleaner.js
// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

const { PrismaClient } = require('@prisma/client');

/**
 * –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î
 * –í–ù–ò–ú–ê–ù–ò–ï: –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –¢–û–õ–¨–ö–û –≤ —Ç–µ—Å—Ç–∞—Ö!
 */
async function cleanDatabase(prisma) {
  // üö® –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  if (process.env.NODE_ENV !== 'test') {
    throw new Error('üö® cleanDatabase –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –¢–û–õ–¨–ö–û –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ!');
  }

  if (!process.env.DATABASE_URL || !process.env.DATABASE_URL.includes('test')) {
    throw new Error('üö® DATABASE_URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å "test"!');
  }

  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—É—á–∏—Ç—ã–≤–∞–µ–º FK constraints)
    await prisma.orderItem.deleteMany({});
    await prisma.order.deleteMany({});
    await prisma.payment.deleteMany({});
    await prisma.batchItem.deleteMany({});
    await prisma.batch.deleteMany({});
    await prisma.product.deleteMany({});
    await prisma.category.deleteMany({});
    await prisma.address.deleteMany({});
    await prisma.user.deleteMany({});
    await prisma.systemSettings.deleteMany({});

    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ë–î:', error.message);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞—ë—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
async function seedTestData(prisma) {
  console.log('üå± –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

  const category = await prisma.category.create({
    data: {
      name: 'TEST_Category',
      description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è',
      isActive: true
    }
  });

  const product = await prisma.product.create({
    data: {
      categoryId: category.id,
      name: 'TEST_Product',
      price: 100,
      unit: '—à—Ç',
      isActive: true
    }
  });

  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã');
  return { category, product };
}

module.exports = { 
  cleanDatabase,
  seedTestData
};
