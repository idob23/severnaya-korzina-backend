// test/setup.js
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

const { PrismaClient } = require('@prisma/client');
const path = require('path');
const dotenv = require('dotenv');

// üî• –ö–†–ò–¢–ò–ß–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º .env.test —Å –ü–ï–†–ï–ó–ê–ü–ò–°–¨–Æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
const envPath = path.resolve(__dirname, '../.env.test');
console.log(`üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑: ${envPath}`);

// override: true - –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const result = dotenv.config({ path: envPath, override: true });

if (result.error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env.test:', result.error);
  process.exit(1);
}

console.log('‚úÖ –§–∞–π–ª .env.test –∑–∞–≥—Ä—É–∂–µ–Ω');
console.log(`üìä DATABASE_URL: ${process.env.DATABASE_URL}`);

// üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #1: NODE_ENV
if (process.env.NODE_ENV !== 'test') {
  console.error('\nüö® –û–®–ò–ë–ö–ê: –¢–µ—Å—Ç—ã –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –¢–û–õ–¨–ö–û —Å NODE_ENV=test');
  console.error(`   –¢–µ–∫—É—â–∏–π NODE_ENV: "${process.env.NODE_ENV}"`);
  console.error('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: NODE_ENV=test npm test\n');
  process.exit(1);
}

// üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #2: DATABASE_URL
if (!process.env.DATABASE_URL) {
  console.error('\nüö® –û–®–ò–ë–ö–ê: DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.error('   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.test —Å —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î\n');
  process.exit(1);
}

if (!process.env.DATABASE_URL.includes('test')) {
  console.error('\nüö® –û–®–ò–ë–ö–ê: DATABASE_URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å "test"');
  console.error(`   –¢–µ–∫—É—â–∏–π URL: ${process.env.DATABASE_URL}`);
  console.error('   –≠—Ç–æ –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è production –ë–î!\n');
  process.exit(1);
}

// üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê #3: –ó–∞–ø—Ä–µ—Ç production –ë–î
const productionIndicators = [
  'rc1a-30l5jck6ggdjdle6',
  'yandexcloud.net',
  ':6432/',
  'severnaya_korzina?'
];

const hasProductionIndicator = productionIndicators.some(indicator => 
  process.env.DATABASE_URL.includes(indicator)
);

if (hasProductionIndicator) {
  console.error('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ PRODUCTION –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö!');
  console.error(`   URL: ${process.env.DATABASE_URL}`);
  console.error('   –¢–µ—Å—Ç—ã –ó–ê–ü–†–ï–©–ï–ù–´ –Ω–∞ production –ë–î!\n');
  process.exit(1);
}

// ‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã');
console.log(`üìä –¢–µ—Å—Ç–æ–≤–∞—è –ë–î: ${process.env.DATABASE_URL.split('@')[1] || 'localhost'}`);
console.log(`üîß NODE_ENV: ${process.env.NODE_ENV}\n`);

// –≠–∫—Å–ø–æ—Ä—Ç Prisma –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
const prisma = new PrismaClient({
  datasources: {
    db: {
      url: process.env.DATABASE_URL
    }
  }
});

module.exports = { prisma };
