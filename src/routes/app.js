// src/routes/app.js
// API endpoints –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

const express = require('express');
const router = express.Router();
const path = require('path');
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

/**
 * GET /api/app/status
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Ä–µ–∂–∏–º–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
 * 
 * Query params:
 * - phone: –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * - version: –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
router.get('/status', async (req, res) => {
  try {
    const { phone, version } = req.query;
    
    console.log(`üì± App status check: phone=${phone}, version=${version}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const maintenanceSettings = await prisma.systemSettings.findMany({
      where: {
        key: {
          in: [
            'maintenance_mode',
            'maintenance_message', 
            'maintenance_end_time',
            'allowed_phones'
          ]
        }
      }
    });
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    const settings = {};
    maintenanceSettings.forEach(s => {
      settings[s.key] = s.value;
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
    const isMaintenanceMode = settings.maintenance_mode === 'true';
    const maintenanceMessage = settings.maintenance_message || '–ü—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.';
    const maintenanceEndTime = settings.maintenance_end_time || null;
    
    // –ü–∞—Ä—Å–∏–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    let allowedPhones = [];
    try {
      if (settings.allowed_phones) {
        allowedPhones = JSON.parse(settings.allowed_phones);
      }
    } catch (e) {
      // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É —Å –∑–∞–ø—è—Ç—ã–º–∏
      allowedPhones = settings.allowed_phones ? settings.allowed_phones.split(',').map(p => p.trim()) : [];
    }

    // –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—à –Ω–æ–º–µ—Ä –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
    if (!allowedPhones.includes('+79142667582')) {
      allowedPhones.push('+79142667582');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–æ—Å—Ç—É–ø –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userAllowed = false;

    if (phone && phone.length > 0) {
    const normalizedPhone = phone.replace(/\D/g, '');
  
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: ${phone}`);
    console.log(`üìã –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: ${JSON.stringify(allowedPhones)}`);
  
    userAllowed = allowedPhones.some(allowed => {
    const normalizedAllowed = allowed.replace(/\D/g, '');
    const matches = normalizedPhone === normalizedAllowed || 
                   normalizedPhone.endsWith(normalizedAllowed) ||
                   normalizedAllowed.endsWith(normalizedPhone);
    
    if (matches) console.log(`‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: ${allowed}`);
    return matches;
    });
  
    console.log(`üéØ userAllowed = ${userAllowed}`);
    } else {
    console.log(`‚ö†Ô∏è –ù–æ–º–µ—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –¥–æ—Å—Ç—É–ø –ó–ê–ü–†–ï–©–ï–ù`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    let updateInfo = {};
    if (version) {
      const updateAvailable = isUpdateAvailable(version);
      const forceUpdate = isForceUpdateRequired(version);
      
      updateInfo = {
        update_available: updateAvailable,
        force_update: forceUpdate,
        latest_version: CURRENT_APP_CONFIG.version,
        min_version: CURRENT_APP_CONFIG.min_version
      };
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    const response = {
      success: true,
      maintenance: isMaintenanceMode && !userAllowed,
      maintenance_details: {
        enabled: isMaintenanceMode,
        message: maintenanceMessage,
        end_time: maintenanceEndTime,
        user_allowed: userAllowed
      },
      ...updateInfo,
      server_time: new Date().toISOString()
    };

    console.log(`üìä –û—Ç–≤–µ—Ç: maintenance=${response.maintenance}, user_allowed=${userAllowed}`);
    
    // –ï—Å–ª–∏ —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if (isMaintenanceMode && !userAllowed) {
      response.status_code = 503; // Service Unavailable
    }
    
    res.json(response);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    res.json({
      success: true,
      maintenance: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
      server_time: new Date().toISOString()
    });
  }
});


// ==========================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
// ==========================================

// –ó–¥–µ—Å—å —Ö—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
// –ü—Ä–∏ –≤—ã–ø—É—Å–∫–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è
const CURRENT_APP_CONFIG = {
  // –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å version –≤ pubspec.yaml)
  version: '5.0.9',
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –≤–µ—Ä—Å–∏—è (–¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
  min_version: '1.0.0',
  
  // URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è APK (–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –¥–æ–º–µ–Ω)
download_url: 'http://84.201.149.245:3000/downloads/severnaya-korzina-5.0.9.apk',
  
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å (–±—É–¥–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç)
    // download_url: 'https://sevkorzina.ru/downloads/severnaya-korzina-1.2.0.apk',
  
  // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ú–ë (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
  size_mb: 50.5,
  
  // –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞
  release_date: '2025-10-17',
  
  // –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  changelog: [
    'üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:',
    '‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    '',
    '‚ö° –£–ª—É—á—à–µ–Ω–∏—è:',
    '‚Ä¢ –£—Å–∫–æ—Ä–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞'
  ],
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  features: {
    // –ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–ª–æ–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    can_skip: true,
    
    // –ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Å–Ω–æ–≤–∞ (–µ—Å–ª–∏ –æ—Ç–ª–æ–∂–∏–ª–∏)
    remind_later_days: 3,
    
    // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ changelog
    show_changelog: true
  },
  
  // URL –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  website_url: 'https://sevkorzina.ru',
  support_url: 'https://sevkorzina.ru/support'
};

// ==========================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ==========================================

/**
 * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π (semantic versioning)
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: -1 –µ—Å–ª–∏ v1 < v2, 0 –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã, 1 –µ—Å–ª–∏ v1 > v2
 */
function compareVersions(v1, v2) {
  const parts1 = v1.split('.').map(Number);
  const parts2 = v2.split('.').map(Number);
  
  for (let i = 0; i < Math.max(parts1.length, parts2.length); i++) {
    const part1 = parts1[i] || 0;
    const part2 = parts2[i] || 0;
    
    if (part1 > part2) return 1;
    if (part1 < part2) return -1;
  }
  
  return 0;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
 */
function isForceUpdateRequired(clientVersion) {
  return compareVersions(clientVersion, CURRENT_APP_CONFIG.min_version) < 0;
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
 */
function isUpdateAvailable(clientVersion) {
  return compareVersions(CURRENT_APP_CONFIG.version, clientVersion) > 0;
}

// ==========================================
// API ENDPOINTS
// ==========================================

/**
 * GET /api/app/version
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * 
 * Query params:
 * - current_version: —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
 * - platform: –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ (android/ios) - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
 */
router.get('/version', async (req, res) => {
  try {
    const { current_version, platform = 'android' } = req.query;
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log(`üì± Version check: ${current_version} (${platform})`);
    
    // –ï—Å–ª–∏ –≤–µ—Ä—Å–∏—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (!current_version) {
      return res.json({
        success: true,
        latest_version: CURRENT_APP_CONFIG.version,
        min_version: CURRENT_APP_CONFIG.min_version,
        message: 'Please provide current_version parameter'
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    const updateAvailable = isUpdateAvailable(current_version);
    const forceUpdate = isForceUpdateRequired(current_version);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    const response = {
      success: true,
      update_available: updateAvailable,
      force_update: forceUpdate,
      latest_version: CURRENT_APP_CONFIG.version,
      min_version: CURRENT_APP_CONFIG.min_version,
      current_version: current_version,
      download_url: CURRENT_APP_CONFIG.download_url,
      size_mb: CURRENT_APP_CONFIG.size_mb,
      release_date: CURRENT_APP_CONFIG.release_date,
      changelog: CURRENT_APP_CONFIG.changelog,
      features: CURRENT_APP_CONFIG.features,
      website_url: CURRENT_APP_CONFIG.website_url,
      support_url: CURRENT_APP_CONFIG.support_url
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (forceUpdate) {
      response.message = '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.';
    } else if (updateAvailable) {
      response.message = '–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏.';
    } else {
      response.message = '–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.';
    }
    
    res.json(response);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏',
      message: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
    });
  }
});

/**
 * GET /api/app/download
 * –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ APK —Ñ–∞–π–ª–∞
 * –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
 */
router.get('/download', async (req, res) => {
  try {
    const { version = CURRENT_APP_CONFIG.version } = req.query;
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const userAgent = req.headers['user-agent'] || 'unknown';
    const ip = req.ip || req.connection.remoteAddress;
    console.log(`üì• APK download: v${version} from ${ip} (${userAgent.substring(0, 50)}...)`);
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ë–î, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    // await saveDownloadStats({ version, ip, userAgent, timestamp: new Date() });
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    res.redirect(CURRENT_APP_CONFIG.download_url);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏',
      message: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é',
      direct_url: CURRENT_APP_CONFIG.download_url
    });
  }
});

/**
 * GET /api/app/changelog
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏–ª–∏ –≤—Å–µ—Ö –≤–µ—Ä—Å–∏–π
 */
router.get('/changelog', async (req, res) => {
  try {
    const { version = CURRENT_APP_CONFIG.version } = req.query;
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏–π
    const changelogs = {
      '1.2.0': CURRENT_APP_CONFIG.changelog,
      '1.1.0': [
        '‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫',
        '‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        '‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
      ],
      '1.0.0': [
        '‚Ä¢ –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        '‚Ä¢ –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–∞—Ç–∞–ª–æ–≥–∞',
        '‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤'
      ]
    };
    
    res.json({
      success: true,
      version: version,
      changelog: changelogs[version] || ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞'],
      all_versions: Object.keys(changelogs).sort(compareVersions).reverse()
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è changelog:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π'
    });
  }
});

/**
 * GET /api/app/info
 * –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (–¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
 */
router.get('/info', async (req, res) => {
  try {
    res.json({
      success: true,
      app_name: '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞',
      package_name: 'com.severnaya.korzina',
      current_version: CURRENT_APP_CONFIG.version,
      min_supported_version: CURRENT_APP_CONFIG.min_version,
      release_date: CURRENT_APP_CONFIG.release_date,
      size_mb: CURRENT_APP_CONFIG.size_mb,
      developer: '–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–∑–∏–Ω–∞ Team',
      website: CURRENT_APP_CONFIG.website_url,
      support: CURRENT_APP_CONFIG.support_url,
      description: '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫ –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –£—Å—Ç—å-–ù–µ—Ä—ã'
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'
    });
  }
});

// ==========================================
// –°–¢–ê–¢–ò–°–¢–ò–ö–ê (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
// ==========================================

/**
 * GET /api/app/stats
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–µ—Ä—Å–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è –∞–¥–º–∏–Ω–∫–∏)
 * –¢—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
router.get('/stats', async (req, res) => {
  try {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    // if (!req.user || !req.user.isAdmin) {
    //   return res.status(403).json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω' });
    // }
    
    // –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—Ä–∞—Ç—å –∏–∑ –ë–î)
    const stats = {
      total_downloads: 0,
      downloads_today: 0,
      active_versions: {
        '1.2.0': 0,
        '1.1.0': 0,
        '1.0.0': 0
      },
      platforms: {
        android: 0,
        ios: 0
      }
    };
    
    res.json({
      success: true,
      stats: stats,
      current_version: CURRENT_APP_CONFIG.version,
      last_update: CURRENT_APP_CONFIG.release_date
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
    });
  }
});

module.exports = router;
