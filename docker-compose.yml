# docker-compose.yml - ИСПРАВЛЕННАЯ ВЕРСИЯ
version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: severnaya_korzina_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: severnaya_korzina
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - severnaya_network

  # Redis для кеширования и сессий
  redis:
    image: redis:7-alpine
    container_name: severnaya_korzina_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - severnaya_network

  # Backend API (для production)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: severnaya_korzina_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://admin:password123@postgres:5432/severnaya_korzina?schema=public
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - severnaya_network
    profiles:
      - production

  # pgAdmin для управления базой данных
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: severnaya_korzina_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@severnaya-korzina.ru
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - severnaya_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  severnaya_network:
    driver: bridge