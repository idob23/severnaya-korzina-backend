// test-migration.js - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
require('dotenv').config();
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testMigration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ payments...\n');
  
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    const count = await prisma.payment.count();
    console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ payments –¥–æ—Å—Ç—É–ø–Ω–∞ (–∑–∞–ø–∏—Å–µ–π: ${count})`);
    
    // –¢–µ—Å—Ç 3: –ù–∞–π–¥—ë–º –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∞
    const order = await prisma.order.findFirst();
    if (!order) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–∫–∞–∑ ID: ${order.id}`);
    
    // –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    const testPayment = await prisma.payment.create({
      data: {
        paymentId: `TEST_${Date.now()}`,
        orderId: order.id,
        provider: 'tochka',
        status: 'CREATED',
        amount: order.totalAmount
      }
    });
    console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂ —Å–æ–∑–¥–∞–Ω: ID ${testPayment.id}`);
    
    // –¢–µ—Å—Ç 5: –ß—Ç–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —Å —Å–≤—è–∑—å—é
    const readPayment = await prisma.payment.findUnique({
      where: { id: testPayment.id },
      include: { order: true }
    });
    console.log(`‚úÖ –ü–ª–∞—Ç—ë–∂ –ø—Ä–æ—á–∏—Ç–∞–Ω, —Å–≤—è–∑—å —Å –∑–∞–∫–∞–∑–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç`);
    
    // –¢–µ—Å—Ç 6: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    await prisma.payment.update({
      where: { id: testPayment.id },
      data: { status: 'APPROVED', paidAt: new Date() }
    });
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ APPROVED`);
    
    // –¢–µ—Å—Ç 7: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    await prisma.payment.delete({
      where: { id: testPayment.id }
    });
    console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂ —É–¥–∞–ª—ë–Ω`);
    
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

testMigration();
