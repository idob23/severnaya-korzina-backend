// test-tochka.js - –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¢–æ—á–∫–∞ –ë–∞–Ω–∫
// –ó–∞–ø—É—Å–∫: node test-tochka.js

require('dotenv').config();
const TochkaPaymentService = require('./src/services/tochkaPaymentService');

async function testTochkaIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¢–æ—á–∫–∞ –ë–∞–Ω–∫...\n');

  const tochka = new TochkaPaymentService();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log('   API URL:', tochka.apiUrl);
  console.log('   Customer Code:', tochka.customerCode);
  console.log('   Merchant ID:', tochka.merchantId);
  console.log('   Terminal ID:', tochka.terminalId);
  console.log('   JWT Token:', tochka.jwtToken ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  console.log('');

  if (!tochka.jwtToken) {
    console.error('‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
    console.log('–î–æ–±–∞–≤—å—Ç–µ TOCHKA_JWT_TOKEN –≤ —Ñ–∞–π–ª .env');
    return;
  }

  try {
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    console.log('üß™ –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞');
    console.log('‚îÅ'.repeat(50));
    
    const testPayment = await tochka.createPayment({
      amount: 100,
      orderId: 'TEST_' + Date.now(),
      userId: 1,
      batchId: null,
      marginPercent: 20,
      vatCode: 6,
      customerPhone: '79999999999'
    });

    console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('   Payment ID:', testPayment.paymentId);
    console.log('   Status:', testPayment.status);
    console.log('   Payment Link:', testPayment.confirmationUrl);
    console.log('   Breakdown:');
    console.log('     - –¢–æ–≤–∞—Ä—ã:', testPayment.breakdown.goods, '‚ÇΩ');
    console.log('     - –£—Å–ª—É–≥–∞:', testPayment.breakdown.service, '‚ÇΩ');
    console.log('     - –ò—Ç–æ–≥–æ:', testPayment.breakdown.total, '‚ÇΩ');
    console.log('');

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    console.log('üß™ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞');
    console.log('‚îÅ'.repeat(50));
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã...');
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const status = await tochka.checkPaymentStatus(testPayment.paymentId);
    
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω!');
    console.log('   Payment ID:', status.paymentId);
    console.log('   Status:', status.status);
    console.log('   Is Paid:', status.isPaid);
    console.log('   Is Pending:', status.isPending);
    console.log('   Amount:', status.amount, '‚ÇΩ');
    console.log('');

    console.log('‚îÅ'.repeat(50));
    console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('');
    console.log('üîó –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:');
    console.log(testPayment.confirmationUrl);
    console.log('');
    console.log('üí° –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –æ–ø–ª–∞—Ç—ã');

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    
    if (error.response) {
      console.error('   API Response:', JSON.stringify(error.response.data, null, 2));
    }
    
    console.log('');
    console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   1. –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω');
    console.log('   2. –ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞');
    console.log('   3. –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã merchantId –∏–ª–∏ customerCode');
    console.log('   4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testTochkaIntegration().then(() => {
  console.log('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch(err => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
  process.exit(1);
});
