// test-get-merchants.js
// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π merchantId

const axios = require('axios');

const JWT_TOKEN = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3NWJmNzBiZTIxYmFlNzdlODBmMmYxYjFjNmMwYmViOSIsInN1YiI6ImY1ZjE1NDNjLTU0NjEtNGJkMS1hOTk5LWQ0ZWQxODUxOGZiNiIsImN1c3RvbWVyX2NvZGUiOiIzMDUyNTA2MjYifQ.L3b9c_R6fQh5KBbM-GqM1kV8PEDunwsgTX09xxBkUl2M5Nm0XgP1FaMfTKcFNO6FFPLQXu_mkbLxzGIGww1PNAz0TGMKyPaM2QUKu83ituy4wSYYgz9R5pjewdMiSV3tnzjL9vKB9RqhMmNozoiqusCaav1Xg3THeFBXqKKqqLwK71NVEPayqE_OJ6fYR5xowgYmkPG1niBdGOWviYkpOkAAAMN9OyTZqHuvmG4BvfNLQmPhL0muk3qLFcKECNZESLRr-t2HoufTEsfzdZoydZPKqa-M4wmxrvx1AC8PG0p6-oUYL0NxxVT1yb3iK1wp2WxgORxdTDceQ3MSqI4Iy41qT886eKuo4PquoRK6-Rfz0dBFSLYEHOflRD1uorWaq1qcIo8T3DddEaq_ukOwdOvMowoZR_AWYPqwBQVJJ-MNrF_rCH7oWOoZjmR1PyRsCja8KeQyKuWrIIPZdp83KgviOOtkZE2KCzYfrlYuo4hRe2aZD83iT5AGIumJW-HD';

const BASE_URL = 'https://enter.tochka.com/uapi';
const CUSTOMER_CODE = '305250626';
const CLIENT_ID = '75bf70be21bae77e80f2f1b1c6c0beb9'; // –ò–∑ –≤–∞—à–µ–≥–æ —Ç–æ–∫–µ–Ω–∞

async function makeRequest(method, endpoint, params = null) {
  try {
    const config = {
      method,
      url: `${BASE_URL}${endpoint}`,
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      timeout: 10000
    };
    
    if (params) {
      config.params = params;
    }
    
    console.log(`\nüîÑ ${method} ${endpoint}`);
    if (params) {
      console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', params);
    }
    
    const response = await axios(config);
    return { 
      success: true, 
      data: response.data, 
      status: response.status 
    };
  } catch (error) {
    return { 
      success: false, 
      status: error.response?.status,
      error: error.response?.data || error.message
    };
  }
}

async function main() {
  console.log('=====================================');
  console.log('–ü–û–ò–°–ö –ü–†–ê–í–ò–õ–¨–ù–û–ì–û MERCHANT ID');
  console.log('=====================================\n');
  console.log(`Client ID: ${CLIENT_ID}`);
  console.log(`Customer Code: ${CUSTOMER_CODE}\n`);
  
  console.log('–ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫...');
  console.log('----------------------------------------');
  
  // –°–ø–∏—Å–æ–∫ endpoints –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const endpoints = [
    {
      name: 'Get Retailers v1.0',
      endpoint: '/acquiring/v1.0/retailers',
      params: { customerCode: CUSTOMER_CODE }
    },
    {
      name: 'Get Retailers v2.0', 
      endpoint: '/acquiring/v2.0/retailers',
      params: { customerCode: CUSTOMER_CODE }
    },
    {
      name: 'Get Merchant List',
      endpoint: '/acquiring/v1.0/merchant/list',
      params: { customerCode: CUSTOMER_CODE }
    },
    {
      name: 'Get Retailers (with clientId)',
      endpoint: '/acquiring/v1.0/retailers',
      params: { 
        customerCode: CUSTOMER_CODE,
        clientId: CLIENT_ID 
      }
    },
    {
      name: 'Get Payment Operation List',
      endpoint: '/acquiring/v1.0/payments',
      params: { customerCode: CUSTOMER_CODE }
    }
  ];
  
  for (const test of endpoints) {
    console.log(`\nüìç ${test.name}`);
    
    const result = await makeRequest('GET', test.endpoint, test.params);
    
    if (result.success) {
      console.log('‚úÖ –£–°–ü–ï–•! –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:');
      console.log(JSON.stringify(result.data, null, 2));
      
      // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ merchantId –≤ –æ—Ç–≤–µ—Ç–µ
      const data = result.data?.Data || result.data;
      
      if (data) {
        // –ò—â–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
        const merchants = data.retailers || data.merchants || data.merchantList || data;
        
        if (Array.isArray(merchants)) {
          console.log('\nüéØ –ù–∞–π–¥–µ–Ω—ã —Ç–æ—Ä–≥–æ–≤—ã–µ —Ç–æ—á–∫–∏:');
          merchants.forEach(m => {
            console.log(`- ID: ${m.id || m.merchantId || m.retailerId}`);
            console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${m.name || m.merchantName || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–ª–∏–Ω–Ω–æ–≥–æ ID
            Object.keys(m).forEach(key => {
              const value = m[key];
              if (typeof value === 'string' && value.length >= 15 && /^\d+$/.test(value)) {
                console.log(`  üîë –í–æ–∑–º–æ–∂–Ω—ã–π merchantId: ${key} = ${value}`);
              }
            });
          });
        } else if (typeof data === 'object') {
          // –ò—â–µ–º –ª—é–±—ã–µ –¥–ª–∏–Ω–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ ID
          console.log('\nüîç –ò—â–µ–º –¥–ª–∏–Ω–Ω—ã–µ ID –≤ –æ—Ç–≤–µ—Ç–µ...');
          
          function findLongIds(obj, prefix = '') {
            Object.keys(obj).forEach(key => {
              const value = obj[key];
              if (typeof value === 'string' && value.length >= 15 && /^\d+$/.test(value)) {
                console.log(`  üîë –ù–∞–π–¥–µ–Ω –¥–ª–∏–Ω–Ω—ã–π ID: ${prefix}${key} = ${value}`);
              } else if (typeof value === 'object' && value !== null) {
                findLongIds(value, `${prefix}${key}.`);
              }
            });
          }
          
          findLongIds(data);
        }
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${result.status}`);
      if (result.error?.message) {
        console.log(`   ${result.error.message}`);
      }
    }
  }
  
  console.log('\n=====================================');
  console.log('–†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('=====================================');
  console.log('–ï—Å–ª–∏ merchantId –Ω–µ –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:');
  console.log('\nüìû –û–ë–†–ê–¢–ò–¢–ï–°–¨ –í –ü–û–î–î–ï–†–ñ–ö–£ –¢–û–ß–ö–ê –ë–ê–ù–ö–ê:');
  console.log('–¢–µ–ª–µ—Ñ–æ–Ω: 8 (800) 333-00-20');
  console.log('Email: help@tochka.com');
  console.log('\nüìù –¢–ï–ö–°–¢ –ó–ê–ü–†–û–°–ê:');
  console.log('"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –º–µ–Ω—è –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—ç–∫–≤–∞–π—Ä–∏–Ω–≥');
  console.log('–¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ –°–ï–í–ï–†–ù–ê–Ø –ö–û–†–ó–ò–ù–ê.');
  console.log('–ú–Ω–µ –Ω—É–∂–µ–Ω 15-–∑–Ω–∞—á–Ω—ã–π merchantId –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API.');
  console.log('–í –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –≤–∏–∂—É —Ç–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–π ID: 25552');
  console.log('Client ID: 75bf70be21bae77e80f2f1b1c6c0beb9');
  console.log('Customer Code: 305250626"');
  console.log('=====================================\n');
}

main();

/*
–ó–ê–ü–£–°–ö:
node test-get-merchants.js
*/

