// test-tochka-fixed.js
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç merchantId

const axios = require('axios');

const JWT_TOKEN = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3NWJmNzBiZTIxYmFlNzdlODBmMmYxYjFjNmMwYmViOSIsInN1YiI6ImY1ZjE1NDNjLTU0NjEtNGJkMS1hOTc5LWQ0ZWQxODUxOGZiNiIsImN1c3RvbWVyX2NvZGUiOiIzMDUyNTA2MjYifQ.L3b9c_R6fQh5KBbM-GqM1kV8PEDunwsgTX09xxBkUl2M5Nm0XgP1FaMfTKcFNO6FFPLQXu_mkbLxzGIGww1PNAz0TGMKyPaM2QUKu83ituy4wSYYgz9R5pjewdMiSV3tnzjL9vKB9RqhMmNozoiqusCaav1Xg3THeFBXqKKqqLwK71NVEPayqE_OJ6fYR5xowgYmkPG1niBdGOWviYkpOkAAAMN9OyTZqHuvmG4BvfNLQmPhL0muk3qLFcKECNZESLRr-t2HoufTEsfzdZoydZPKqa-M4wmxrvx1AC8PG0p6-oUYL0NxxVT1yb3iK1wp2WxgORxdTDceQ3MSqI4Iy41qT886eKuo4PquoRK6-Rfz0dBFSLYEHOflRD1uorWaq1qcIo8T3DddEaq_ukOwdOvMowoZR_AWYPqwBQVJJ-MNrF_rCH7oWOoZjmR1PyRsCja8KeQyKuWrIIPZdp83KgviOOtkZE2KCzYfrlYuo4hRe2aZD83iT5AGIumJW-HD';

const BASE_URL = 'https://enter.tochka.com/uapi';

// –í–ê–®–ò –ü–†–ê–í–ò–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ò–ó API:
const CUSTOMER_CODE = '305236529';  // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥!
const MERCHANT_ID = '200000000026552';  // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π 15-–∑–Ω–∞—á–Ω—ã–π ID!

async function makeRequest(method, endpoint, data = null, params = null) {
  try {
    const config = {
      method,
      url: `${BASE_URL}${endpoint}`,
      headers: {
        'Authorization': `Bearer ${JWT_TOKEN}`,
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      timeout: 10000
    };
    
    if (data) config.data = data;
    if (params) config.params = params;
    
    console.log(`\nüîÑ ${method} ${endpoint}`);
    if (data) {
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º:');
      console.log(JSON.stringify(data, null, 2));
    }
    
    const response = await axios(config);
    return { 
      success: true, 
      data: response.data, 
      status: response.status 
    };
  } catch (error) {
    return { 
      success: false, 
      status: error.response?.status,
      error: error.response?.data || error.message
    };
  }
}

async function createRealPayment(amount, orderId) {
  console.log('=====================================');
  console.log('–°–û–ó–î–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ì–û –ü–õ–ê–¢–ï–ñ–ê');
  console.log('=====================================\n');
  console.log(`Customer Code: ${CUSTOMER_CODE}`);
  console.log(`Merchant ID: ${MERCHANT_ID}`);
  console.log(`–°—É–º–º–∞: ${amount} —Ä—É–±`);
  console.log(`–ó–∞–∫–∞–∑: #${orderId}\n`);
  
  const paymentData = {
    Data: {
      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
      customerCode: CUSTOMER_CODE,
      merchantId: MERCHANT_ID,
      amount: amount.toFixed(2),
      purpose: `–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ ‚Ññ${orderId}`,
      
      // –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
      paymentMode: ["card", "sbp"],
      
      // URL –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
      redirectUrl: `https://app.sevkorzina.ru/#/payment-success?orderId=${orderId}`,
      failRedirectUrl: "https://app.sevkorzina.ru/#/payment-failed",
      
      // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
      ttl: 60,  // —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ —Å—Å—ã–ª–∫–∏ 60 –º–∏–Ω—É—Ç
      saveCard: false,
      preAuthorization: false
    }
  };
  
  const result = await makeRequest('POST', '/acquiring/v1.0/payments', paymentData);
  
  if (result.success) {
    console.log('\n‚úÖ –ü–õ–ê–¢–ï–ñ–ù–ê–Ø –°–°–´–õ–ö–ê –°–û–ó–î–ê–ù–ê!');
    console.log('=====================================');
    
    const responseData = result.data?.Data || result.data;
    
    console.log(`üåê –°–°–´–õ–ö–ê –î–õ–Ø –û–ü–õ–ê–¢–´:`);
    console.log(`   ${responseData.paymentLink}`);
    console.log('');
    console.log(`üìù ID –æ–ø–µ—Ä–∞—Ü–∏–∏: ${responseData.operationId}`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${responseData.status}`);
    console.log(`üí∞ –°—É–º–º–∞: ${responseData.amount} —Ä—É–±`);
    
    console.log('\n=====================================');
    console.log('–î–ê–ù–ù–´–ï –î–õ–Ø .env:');
    console.log('=====================================');
    console.log('# –¢–æ—á–∫–∞ –±–∞–Ω–∫');
    console.log('TOCHKA_API_URL=https://enter.tochka.com/uapi');
    console.log('TOCHKA_JWT_TOKEN=' + JWT_TOKEN.substring(0, 50) + '...');
    console.log(`TOCHKA_CUSTOMER_CODE=${CUSTOMER_CODE}`);
    console.log(`TOCHKA_MERCHANT_ID=${MERCHANT_ID}`);
    console.log('=====================================\n');
    
    return {
      success: true,
      paymentLink: responseData.paymentLink,
      operationId: responseData.operationId
    };
    
  } else {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    console.log('–°—Ç–∞—Ç—É—Å:', result.status);
    
    if (result.error?.Errors) {
      console.log('\n–û—à–∏–±–∫–∏:');
      result.error.Errors.forEach(err => {
        console.log(`- ${err.message}`);
      });
    }
    
    return { success: false };
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –Ω–∞ 100 —Ä—É–±
  await createRealPayment(100.00, 'TEST_001');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
main();

/*
–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:

1. –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞:
   node test-tochka-fixed.js

2. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –∏–∑ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞:
   const { createRealPayment } = require('./test-tochka-fixed');
   const result = await createRealPayment(1000.00, 'ORDER_123');
   if (result.success) {
     console.log('–°—Å—ã–ª–∫–∞:', result.paymentLink);
   }
*/
