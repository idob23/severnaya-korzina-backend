// prisma/schema.prisma - ОБНОВЛЕННАЯ ВЕРСИЯ С ПОЛЯМИ ДЛЯ ПАНЕЛИ

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Модель пользователя
model User {
  id          Int       @id @default(autoincrement())
  phone       String    @unique
  firstName   String
  lastName    String?
  email       String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Связи
  orders      Order[]
  addresses   Address[]
  
  @@map("users")
}

// Адреса пользователей
model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  address   String
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())

  // Связи
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders Order[]

  @@map("addresses")
}

// Категории товаров
model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  imageUrl    String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())

  // Связи
  products Product[]

  @@map("categories")
}

// Товары
model Product {
  id           Int     @id @default(autoincrement())
  categoryId   Int
  name         String
  description  String?
  imageUrl     String?
  price        Decimal @db.Decimal(10, 2)
  unit         String  // кг, шт, л и т.д.
  minQuantity  Int     @default(1)
  maxQuantity  Int?
  isActive     Boolean @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Связи
  category    Category    @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
  batchItems  BatchItem[]

  @@map("products")
}

// Закупки (батчи) - ОБНОВЛЕННАЯ МОДЕЛЬ
model Batch {
  id              Int       @id @default(autoincrement())
  title           String
  description     String?
  startDate       DateTime
  endDate         DateTime
  deliveryDate    DateTime?
  minParticipants Int       @default(5)
  maxParticipants Int?
  status          String    @default("active") // active, collecting, ready, shipped, delivered, cancelled
  pickupAddress   String?
  
  // === НОВЫЕ ПОЛЯ ДЛЯ ИНФОРМАЦИОННОЙ ПАНЕЛИ ===
  
  // Финансовые цели
  targetAmount    Decimal   @default(3000000) @db.Decimal(10, 2)  // Целевая сумма (3 млн)
  currentAmount   Decimal   @default(0) @db.Decimal(10, 2)        // Текущая сумма заказов
  
  // Счетчики участников (денормализация для производительности)
  participantsCount Int     @default(0)                           // Текущее количество участников
  
  // Прогресс и статистика
  progressPercent Int       @default(0)                           // Процент выполнения (0-100)
  
  // Автоматическое обновление при изменении заказов
  lastCalculated  DateTime  @default(now())                       // Время последнего пересчета
  
  // Настройки закупки
  autoLaunch      Boolean   @default(true)                        // Автозапуск при достижении цели
  marginPercent   Decimal   @default(20) @db.Decimal(5, 2)        // Процент наценки (20%)
  
  // Даты и сроки
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Связи
  batchItems BatchItem[]
  orders     Order[]

  @@map("batches")
}

// Товары в закупке
model BatchItem {
  id        Int     @id @default(autoincrement())
  batchId   Int
  productId Int
  price     Decimal @db.Decimal(10, 2)
  discount  Decimal @default(0) @db.Decimal(5, 2)
  isActive  Boolean @default(true)

  // Связи
  batch   Batch   @relation(fields: [batchId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@unique([batchId, productId])
  @@map("batch_items")
}

// Заказы
model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  batchId     Int?
  addressId   Int
  status      String   @default("pending") // pending, confirmed, paid, shipped, delivered, cancelled
  totalAmount Decimal  @db.Decimal(10, 2)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Связи
  user       User        @relation(fields: [userId], references: [id])
  batch      Batch?      @relation(fields: [batchId], references: [id])
  address    Address     @relation(fields: [addressId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

// Позиции в заказе
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  // Связи
  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}